pool:
  vmImage: 'windows-latest'

variables:
  solution: $(Build.SourcesDirectory)/TranslucentTB.sln
  testResultsFile: $(Agent.TempDirectory)/results.xml

strategy:
  matrix:
    'ARM64 Debug':
      configuration: Debug
      platform: ARM64
    'ARM64 Release':
      configuration: Release
      platform: ARM64
    'x64 Debug':
      configuration: Debug
      platform: x64
    'x64 Release':
      configuration: Release
      platform: x64

steps:
- script: vcpkg integrate install
  displayName: 'Integrate vcpkg'
- script: vcpkg install --triplet $(platform)-windows fmt spdlog
  displayName: 'Install vcpkg dependencies'
- script: vcpkg install --triplet $(platform)-windows --overlay-ports=$(Build.SourcesDirectory)/ports --head detours gtest member-thunk rapidjson wil
  displayName: 'Install vcpkg head dependencies'
- task: NuGetCommand@2
  displayName: 'Restore NuGet packages'
  inputs:
    restoreSolution: $(solution)
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: $(solution)
    platform: $(platform)
    configuration: $(configuration)
- script: ./$(platform)/$(configuration)/Tests.exe --gtest_output=xml:$(testResultsFile)
  displayName: 'Run unit tests'
  condition: and(succeededOrFailed(), eq(variables['platform'], 'x64'))
- powershell: |
    $fileExists = Test-Path -Path "$(testResultsFile)"
    Write-Output "##vso[task.setvariable variable=testsRan]$fileExists"
  displayName: 'Check if test results are present'
  condition: and(succeededOrFailed(), eq(variables['platform'], 'x64'))
- task: PublishTestResults@2
  displayName: 'Publish test results'
  condition: and(succeededOrFailed(), eq(variables['platform'], 'x64'), eq(variables['testsRan'], true))
  inputs:
    testResultsFiles: $(testResultsFile)
    buildPlatform: $(platform)
    buildConfiguration: $(configuration)
